
#타겟 스크립트

public class Rotate : MonoBehaviour
{
    //회전 속도 선언
    [SerializeField]
    float rotatespeed = 50;
    //회전 방향 선정
    [SerializeField]
    Vector3 rotateangle = Vector3.forward;

    private void Update()
    {
        //회전 속도 * 회전 방향
        transform.Rotate(rotateangle * rotatespeed * Time.deltaTime);
    }
}

#핀 스폰 스크립트
public class PinSpawn : MonoBehaviour
{
    //스크립트 위에 굵은 글씨로 "Commons" 출력
    [Header("Commons")]
    //오브젝트 지정
    [SerializeField]
    GameObject pinPrefab;
    //함수(위치값) 
    public void Pinspawn(Vector2 position)
    {
        //지정한 오브젝트 생성
        Instantiate(pinPrefab,position,Quaternion.identity);
    }
}

#스테이지 컨트롤 스크립트
public class Stagecontrol : MonoBehaviour
{
    [SerializeField]
    PinSpawn pinspawn;   //핀 생성을 위한 PinSpawn 컴포넌트
    [SerializeField]
    int throwablecount; //던져야하는갯수

    //던져야하는 첫번쨰 핀위치
    private Vector3 firstposition = Vector3.down;
    //던져야하는 핀들 사이의 거리
    public float pindistance { private set; get; } = 1;
    private void Awake()
    {
        for (int i = 0;i<throwablecount;i++)
        {
            //Pinspawn 함수 실행
            pinspawn.Pinspawn(firstposition + Vector3.down * pindistance * i);
        }
    }
}

#핀 스크립트
public class Pin : MonoBehaviour
{
    [SerializeField]
    GameObject square;

    public void StuckPin()
    {
        //square를 보이게하기
        square.SetActive(true);
    }
}
